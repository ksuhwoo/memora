server {
    server_name memora.n-e.kr;

    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/ {
        proxy_pass http://localhost:3001; # 백엔드 Node.js 앱이 실행되는 주소
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /uploads/{
        alias /home/ubuntu/memora/uploads/;
        autoindex off;
    }
    location /socket.io/ {
    # Node.js 서버 주소를 정확하게 기입합니다.
    proxy_pass http://localhost:3001;

    # 웹소켓 통신을 위한 필수 헤더 설정입니다.
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
}

    listen 443 ssl; # managed by Certbot
    # !!! 중요: 아래 SSL 인증서 경로는 Windows 환경에 맞게 실제 경로로 수정해야 합니다. !!!
    # 예: ssl_certificate C:/Certbot/live/memora.n-e.kr/fullchain.pem;
    # 예: ssl_certificate_key C:/Certbot/live/memora.n-e.kr/privkey.pem;
    ssl_certificate     /home/ubuntu/live/memora.n-e.kr/fullchain.pem;
    ssl_certificate_key /home/ubuntu/live/memora.n-e.kr/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
}
server {
    # Certbot이 생성한 HTTP -> HTTPS 리디렉션
    if ($host = memora.n-e.kr) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name memora.n-e.kr;
    return 404; # managed by Certbot (HTTP 요청에 대해 404 반환, HTTPS로 리디렉션 후)
}
              