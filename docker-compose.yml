# docker-compose.yml (들여쓰기 검증 최종본)

services:
  # Nginx 경비실
  nginx:
    image: nginx:1.25
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - /home/ubuntu/live:/etc/letsencrypt/live:ro
      - /home/ubuntu/memora/uploads:/home/ubuntu/memora/uploads:ro
    depends_on:
      - app
    networks:
      - app-network

  # Node.js 통합 앱 서비스 (PM2 실행)
  app:
    build: .
    restart: always
    env_file:
      - .env
    volumes:
      - /home/ubuntu/memora/uploads:/usr/src/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # 데이터베이스 서비스
  db:
    image: mysql:8.0
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$${MYSQL_USER}", "-p$${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:

volumes:
  db-data: